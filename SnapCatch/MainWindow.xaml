<controls:MetroWindow x:Class="SnapCatch.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SnapCatch"
        xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        xmlns:additionalControl="clr-namespace:SnapCatch.AdditionalControl"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:command="http://www.galasoft.ch/mvvmlight"
        mc:Ignorable="d"
        x:Name="MwndContainer"
        Title="{DynamicResource app_MainWindowName}" Height="600" Width="920" DataContext="{Binding Source={StaticResource Locator}, Path=Main}" 
                      Background="{DynamicResource ControlBackgroundBrush}">
    <!--general flyouts-->
    <controls:MetroWindow.Flyouts>
        <controls:FlyoutsControl>
            <controls:Flyout IsModal="False" Header="Flyout" Position="Right" Width="200">
                <!-- Your custom content here -->
            </controls:Flyout>
        </controls:FlyoutsControl>
    </controls:MetroWindow.Flyouts>
    <Grid Background="{DynamicResource AccentColorBrush4}">
        <tb:TaskbarIcon IconSource="Resources/Icons/tray_ico.ico" 
                        DoubleClickCommand="{Binding RestoreWindowCommand}">
            <tb:TaskbarIcon.ContextMenu>
                <ContextMenu Background="{DynamicResource ControlBackgroundBrush}" Foreground="{DynamicResource TextBrush}">
                    <ContextMenu.Items>
                        <MenuItem Command="{Binding DisplaySettings}" Header="Настройки"/>
                        <MenuItem Command="{Binding CloseAppCommand}" Header="Закрыть"/>
                    </ContextMenu.Items>
                </ContextMenu>
            </tb:TaskbarIcon.ContextMenu>
        </tb:TaskbarIcon>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="0"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="25"/>
            </Grid.RowDefinitions>
            <Grid ClipToBounds="False"  Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="40"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <ScrollViewer 
                    Grid.Column="1"
                    HorizontalScrollBarVisibility="Auto" 
                    VerticalScrollBarVisibility="Visible"
                    VerticalAlignment="Stretch"
                    HorizontalAlignment="Stretch">
                    <Border VerticalAlignment="Center" HorizontalAlignment="Center" BorderBrush="{DynamicResource AccentBaseColorBrush}">
                        <Border BorderThickness="1" BorderBrush="{DynamicResource AccentColorBrush}">
                            <Border.Effect>
                                <DropShadowEffect Direction="30" Opacity=".2" Color="{DynamicResource BlackColor}" ShadowDepth="7"></DropShadowEffect>
                            </Border.Effect>
                            <Viewbox RenderOptions.EdgeMode="Aliased" Stretch="None">
                                <ItemsControl x:Name="CanvasItemsControl" ItemsSource="{Binding LayersManager.DrawingLayers }">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <Canvas RenderOptions.EdgeMode="Aliased"
                                                    Background="Transparent"
                                                    x:Name="MainCanvasDisplay"
                                                    SnapsToDevicePixels="True"
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Width="{Binding ViewportManager.WorkAreaWidth}" 
                                                    Height="{Binding ViewportManager.WorkAreaHeight}" 
                                                    PreviewMouseLeftButtonDown="MainCanvasDisplay_OnPreviewMouseLeftButtonDown"
                                                    PreviewMouseLeftButtonUp="MainCanvasDisplay_OnPreviewMouseLeftButtonUp">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                                        <command:EventToCommand
                                                            Command="{Binding StartUsingToolCommand}"
                                                            CommandParameter="{Binding Mode=OneWay}" />
                                                    </i:EventTrigger>
                                                    <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                                        <command:EventToCommand
                                                            Command="{Binding EndUsingToolCommand}"
                                                            CommandParameter="{Binding Mode=OneWay}" />
                                                    </i:EventTrigger>
                                                    <i:EventTrigger EventName="PreviewMouseMove">
                                                        <command:EventToCommand
                                                            Command="{Binding EndUsingToolCommand}"
                                                            CommandParameter="{Binding Mode=OneWay}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                                <Canvas.LayoutTransform>
                                                    <TransformGroup>
                                                        <ScaleTransform  ScaleX="{Binding ViewportManager.LayoutScaleTransformValue, Mode=TwoWay}" 
                                                                         ScaleY="{Binding ViewportManager.LayoutScaleTransformValue, Mode=TwoWay}" 
                                                                         CenterX="{Binding ViewportManager.ImageCenterX}" 
                                                                         CenterY="{Binding ViewportManager.ImageCenterY}"/>
                                                        <TranslateTransform ></TranslateTransform>
                                                    </TransformGroup>
                                                </Canvas.LayoutTransform>
                                            </Canvas>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </ItemsControl>
                            </Viewbox>
                        </Border>
                    </Border>
                </ScrollViewer>
                <Grid Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Border Grid.Row="0" BorderThickness="0,0,1,0" BorderBrush="{DynamicResource AccentBaseColorBrush}">
                        <Canvas  Background="{DynamicResource ControlBackgroundBrush}">
                            <ListBox ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                     ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                     Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Canvas}, Path=Height}"
                                     Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Canvas}, Path=Width}"
                                     HorizontalContentAlignment="Center"
                                     VerticalAlignment="Center"
                                     ItemsSource="{Binding ToolsManager.ToolGroups}">
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListBoxItem}">
                                        <Setter Property="Focusable" Value="false"/>
                                        <Setter Property="Margin" Value="0"></Setter>
                                        <Setter Property="BorderThickness" Value="0"/>
                                        <Setter Property="Padding" Value="0"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"></Setter>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <additionalControl:ExpandableButton ExpandButtonWidth="5" Width="45" Height="40" Items="{Binding Tools}">
                                            <additionalControl:ExpandableButton.ItemTemplate>
                                                <DataTemplate>
                                                    <ToggleButton IsChecked="{Binding IsSelected}"
                                                                  ToolTip="{Binding ToolName}"
                                                                  Style="{StaticResource MetroToggleFlatAccentButton}" Height="{Binding Path=Height, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type additionalControl:ExpandableButton}}}"
                                                                  Width="40">
                                                        <Rectangle Width="20"
                                                                   Height="20"
                                                                   Fill="{DynamicResource TextBrush}">
                                                            <Rectangle.OpacityMask>
                                                                <VisualBrush Stretch="None"
                                                                             Visual="{Binding ToolImagePath}"/>
                                                            </Rectangle.OpacityMask>
                                                        </Rectangle>
                                                    </ToggleButton>
                                                </DataTemplate>
                                            </additionalControl:ExpandableButton.ItemTemplate>
                                        </additionalControl:ExpandableButton>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </Canvas>
                    </Border>
                    <Border Grid.Row="1" BorderThickness="0,3,1,0" BorderBrush="{DynamicResource AccentBaseColorBrush}">
                        <StackPanel  >
                            <Button ToolTip="{DynamicResource mfb_save}" Style="{DynamicResource MetroFlatBaseButton}" VerticalAlignment="Stretch" Height="35">
                                <Rectangle Width="20"
                                           Height="20"
                                           Fill="{DynamicResource TextBrush}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="UniformToFill"
                                                     Visual="{StaticResource appbar_save}"/>
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </Button>
                            <Button ToolTip="{DynamicResource mfb_to_clipboard}" Style="{DynamicResource MetroFlatBaseButton}" VerticalAlignment="Stretch" Height="35">
                                <Rectangle Width="20"
                                           Height="20"
                                           Fill="{DynamicResource TextBrush}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform"
                                                     Visual="{StaticResource appbar_clipboard}"/>
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </Button>
                            <Button ToolTip="{DynamicResource mfb_upload}" Style="{DynamicResource MetroFlatBaseButton}"
                                    VerticalAlignment="Stretch" 
                                    Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Grid}, Path=Width}"
                                    Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Grid}, Path=Width}">
                                <Rectangle Width="20"
                                           Height="20"
                                           Fill="{DynamicResource TextBrush}">
                                    <Rectangle.OpacityMask>
                                        <VisualBrush Stretch="Uniform"
                                                     Visual="{StaticResource appbar_cloud_upload}"/>
                                    </Rectangle.OpacityMask>
                                </Rectangle>
                            </Button>
                        </StackPanel>
                    </Border>
                </Grid>
            </Grid>
            <StatusBar x:Name="StatusBar" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Grid.Row="2" Background="{DynamicResource AccentBaseColorBrush}">
                <DockPanel LastChildFill="True" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Width="{Binding ElementName=MwndContainer, Path=Width}">
                    <TextBlock  Margin="4,0,4,0" Text="100%" Background="{DynamicResource AccentColorBrush2}"></TextBlock>
                    <Slider Margin="0,0,16,0" 
                            Value="{Binding ViewportManager.SliderValue, Mode=TwoWay}"
                            TickPlacement="None" 
                            Foreground="{DynamicResource TextBoxBorderBrush}" 
                            VerticalAlignment="Stretch" 
                            HorizontalAlignment="Stretch"
                            TickFrequency="10" Ticks="29" Minimum="-10" Maximum="300" Style="{DynamicResource FlatSlider}"></Slider>
                </DockPanel>
            </StatusBar>
        </Grid>
    </Grid>
</controls:MetroWindow>

